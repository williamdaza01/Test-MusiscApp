@model Test_MusiscApp.Models.Album

@{
    ViewData["Title"] = "Crear Álbum";
}

@if (ViewData.ModelState.Any(m => m.Value.Errors.Any()))
{
    <div class="alert alert-danger">
        <h4>Error</h4>
        <ul>
            @foreach (var key in ViewData.ModelState.Keys)
            {
                foreach (var error in ViewData.ModelState[key].Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Inventory" asp-action="Inventory">Volver a la lista</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
